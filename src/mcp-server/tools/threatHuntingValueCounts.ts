/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { threatHuntingValueCounts } from "../../funcs/threatHuntingValueCounts.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.V3ThreathuntingValueCountsRequest$inboundSchema,
};

export const tool$threatHuntingValueCounts: ToolDefinition<typeof args> = {
  name: "threat-hunting-value-counts",
  description: `CensEye: Retrieve value counts to discover pivots

Get counts of web assets for specific field-value pairs and combinations of field-value pairs. This is similar to the [CensEye functionality](https://docs.censys.com/docs/platform-threat-hunting-use-censeye-to-build-detections#/) available in the Platform web UI, but it allows you to define specific fields of interest rather than the [default fields](https://docs.censys.com/docs/platform-threat-hunting-use-censeye-to-build-detections#default-pivot-fields) leveraged by the tool in the UI.<br><br>Each array can only target fields within the same nested object. For example, you can combine \`host.services.port=80\` and \`host.services.protocol=SSH\` in the same array, but you cannot combine \`host.services.port=80\` and \`host.location.country=”United States”\` in the same array. You can input multiple arrays of objects in each API call.<br><br>To use this endpoint, your organization must have access to the Threat Hunting Module. This endpoint costs 1 credit per count condition (array of objects) included in the API call.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await threatHuntingValueCounts(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value.result;

    return formatResult(value, apiCall);
  },
};
