/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type MediaProfile = {
  maxProfileCount?: number | undefined;
};

/** @internal */
export const MediaProfile$inboundSchema: z.ZodType<
  MediaProfile,
  z.ZodTypeDef,
  unknown
> = z.object({
  max_profile_count: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    "max_profile_count": "maxProfileCount",
  });
});

/** @internal */
export type MediaProfile$Outbound = {
  max_profile_count?: number | undefined;
};

/** @internal */
export const MediaProfile$outboundSchema: z.ZodType<
  MediaProfile$Outbound,
  z.ZodTypeDef,
  MediaProfile
> = z.object({
  maxProfileCount: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    maxProfileCount: "max_profile_count",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MediaProfile$ {
  /** @deprecated use `MediaProfile$inboundSchema` instead. */
  export const inboundSchema = MediaProfile$inboundSchema;
  /** @deprecated use `MediaProfile$outboundSchema` instead. */
  export const outboundSchema = MediaProfile$outboundSchema;
  /** @deprecated use `MediaProfile$Outbound` instead. */
  export type Outbound = MediaProfile$Outbound;
}

export function mediaProfileToJSON(mediaProfile: MediaProfile): string {
  return JSON.stringify(MediaProfile$outboundSchema.parse(mediaProfile));
}

export function mediaProfileFromJSON(
  jsonString: string,
): SafeParseResult<MediaProfile, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MediaProfile$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MediaProfile' from JSON`,
  );
}
