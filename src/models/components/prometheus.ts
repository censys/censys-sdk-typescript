/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PrometheusResponse,
  PrometheusResponse$inboundSchema,
  PrometheusResponse$Outbound,
  PrometheusResponse$outboundSchema,
} from "./prometheusresponse.js";

export type Prometheus = {
  response?: PrometheusResponse | undefined;
};

/** @internal */
export const Prometheus$inboundSchema: z.ZodType<
  Prometheus,
  z.ZodTypeDef,
  unknown
> = z.object({
  response: PrometheusResponse$inboundSchema.optional(),
});

/** @internal */
export type Prometheus$Outbound = {
  response?: PrometheusResponse$Outbound | undefined;
};

/** @internal */
export const Prometheus$outboundSchema: z.ZodType<
  Prometheus$Outbound,
  z.ZodTypeDef,
  Prometheus
> = z.object({
  response: PrometheusResponse$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Prometheus$ {
  /** @deprecated use `Prometheus$inboundSchema` instead. */
  export const inboundSchema = Prometheus$inboundSchema;
  /** @deprecated use `Prometheus$outboundSchema` instead. */
  export const outboundSchema = Prometheus$outboundSchema;
  /** @deprecated use `Prometheus$Outbound` instead. */
  export type Outbound = Prometheus$Outbound;
}

export function prometheusToJSON(prometheus: Prometheus): string {
  return JSON.stringify(Prometheus$outboundSchema.parse(prometheus));
}

export function prometheusFromJSON(
  jsonString: string,
): SafeParseResult<Prometheus, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Prometheus$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Prometheus' from JSON`,
  );
}
