/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type Cmore = {};

/** @internal */
export const Cmore$inboundSchema: z.ZodType<Cmore, z.ZodTypeDef, unknown> = z
  .object({});

/** @internal */
export type Cmore$Outbound = {};

/** @internal */
export const Cmore$outboundSchema: z.ZodType<
  Cmore$Outbound,
  z.ZodTypeDef,
  Cmore
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Cmore$ {
  /** @deprecated use `Cmore$inboundSchema` instead. */
  export const inboundSchema = Cmore$inboundSchema;
  /** @deprecated use `Cmore$outboundSchema` instead. */
  export const outboundSchema = Cmore$outboundSchema;
  /** @deprecated use `Cmore$Outbound` instead. */
  export type Outbound = Cmore$Outbound;
}

export function cmoreToJSON(cmore: Cmore): string {
  return JSON.stringify(Cmore$outboundSchema.parse(cmore));
}

export function cmoreFromJSON(
  jsonString: string,
): SafeParseResult<Cmore, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Cmore$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Cmore' from JSON`,
  );
}
