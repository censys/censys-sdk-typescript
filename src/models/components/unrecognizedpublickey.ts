/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UnrecognizedPublicKey = {
  raw?: string | undefined;
};

/** @internal */
export const UnrecognizedPublicKey$inboundSchema: z.ZodType<
  UnrecognizedPublicKey,
  z.ZodTypeDef,
  unknown
> = z.object({
  raw: z.string().optional(),
});

/** @internal */
export type UnrecognizedPublicKey$Outbound = {
  raw?: string | undefined;
};

/** @internal */
export const UnrecognizedPublicKey$outboundSchema: z.ZodType<
  UnrecognizedPublicKey$Outbound,
  z.ZodTypeDef,
  UnrecognizedPublicKey
> = z.object({
  raw: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnrecognizedPublicKey$ {
  /** @deprecated use `UnrecognizedPublicKey$inboundSchema` instead. */
  export const inboundSchema = UnrecognizedPublicKey$inboundSchema;
  /** @deprecated use `UnrecognizedPublicKey$outboundSchema` instead. */
  export const outboundSchema = UnrecognizedPublicKey$outboundSchema;
  /** @deprecated use `UnrecognizedPublicKey$Outbound` instead. */
  export type Outbound = UnrecognizedPublicKey$Outbound;
}

export function unrecognizedPublicKeyToJSON(
  unrecognizedPublicKey: UnrecognizedPublicKey,
): string {
  return JSON.stringify(
    UnrecognizedPublicKey$outboundSchema.parse(unrecognizedPublicKey),
  );
}

export function unrecognizedPublicKeyFromJSON(
  jsonString: string,
): SafeParseResult<UnrecognizedPublicKey, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UnrecognizedPublicKey$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UnrecognizedPublicKey' from JSON`,
  );
}
