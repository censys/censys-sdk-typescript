/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  SmbHeaderLog,
  SmbHeaderLog$inboundSchema,
  SmbHeaderLog$Outbound,
  SmbHeaderLog$outboundSchema,
} from "./smbheaderlog.js";

export type SmbSessionSetupLog = {
  headerLog?: SmbHeaderLog | undefined;
  negotiateFlags?: number | undefined;
  setupFlags?: number | undefined;
  targetName?: string | undefined;
};

/** @internal */
export const SmbSessionSetupLog$inboundSchema: z.ZodType<
  SmbSessionSetupLog,
  z.ZodTypeDef,
  unknown
> = z.object({
  header_log: SmbHeaderLog$inboundSchema.optional(),
  negotiate_flags: z.number().int().optional(),
  setup_flags: z.number().int().optional(),
  target_name: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "header_log": "headerLog",
    "negotiate_flags": "negotiateFlags",
    "setup_flags": "setupFlags",
    "target_name": "targetName",
  });
});

/** @internal */
export type SmbSessionSetupLog$Outbound = {
  header_log?: SmbHeaderLog$Outbound | undefined;
  negotiate_flags?: number | undefined;
  setup_flags?: number | undefined;
  target_name?: string | undefined;
};

/** @internal */
export const SmbSessionSetupLog$outboundSchema: z.ZodType<
  SmbSessionSetupLog$Outbound,
  z.ZodTypeDef,
  SmbSessionSetupLog
> = z.object({
  headerLog: SmbHeaderLog$outboundSchema.optional(),
  negotiateFlags: z.number().int().optional(),
  setupFlags: z.number().int().optional(),
  targetName: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    headerLog: "header_log",
    negotiateFlags: "negotiate_flags",
    setupFlags: "setup_flags",
    targetName: "target_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SmbSessionSetupLog$ {
  /** @deprecated use `SmbSessionSetupLog$inboundSchema` instead. */
  export const inboundSchema = SmbSessionSetupLog$inboundSchema;
  /** @deprecated use `SmbSessionSetupLog$outboundSchema` instead. */
  export const outboundSchema = SmbSessionSetupLog$outboundSchema;
  /** @deprecated use `SmbSessionSetupLog$Outbound` instead. */
  export type Outbound = SmbSessionSetupLog$Outbound;
}

export function smbSessionSetupLogToJSON(
  smbSessionSetupLog: SmbSessionSetupLog,
): string {
  return JSON.stringify(
    SmbSessionSetupLog$outboundSchema.parse(smbSessionSetupLog),
  );
}

export function smbSessionSetupLogFromJSON(
  jsonString: string,
): SafeParseResult<SmbSessionSetupLog, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SmbSessionSetupLog$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SmbSessionSetupLog' from JSON`,
  );
}
