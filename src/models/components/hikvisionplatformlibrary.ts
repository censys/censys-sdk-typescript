/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type HikvisionPlatformLibrary = {
  name?: string | undefined;
  version?: string | undefined;
};

/** @internal */
export const HikvisionPlatformLibrary$inboundSchema: z.ZodType<
  HikvisionPlatformLibrary,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  version: z.string().optional(),
});

/** @internal */
export type HikvisionPlatformLibrary$Outbound = {
  name?: string | undefined;
  version?: string | undefined;
};

/** @internal */
export const HikvisionPlatformLibrary$outboundSchema: z.ZodType<
  HikvisionPlatformLibrary$Outbound,
  z.ZodTypeDef,
  HikvisionPlatformLibrary
> = z.object({
  name: z.string().optional(),
  version: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HikvisionPlatformLibrary$ {
  /** @deprecated use `HikvisionPlatformLibrary$inboundSchema` instead. */
  export const inboundSchema = HikvisionPlatformLibrary$inboundSchema;
  /** @deprecated use `HikvisionPlatformLibrary$outboundSchema` instead. */
  export const outboundSchema = HikvisionPlatformLibrary$outboundSchema;
  /** @deprecated use `HikvisionPlatformLibrary$Outbound` instead. */
  export type Outbound = HikvisionPlatformLibrary$Outbound;
}

export function hikvisionPlatformLibraryToJSON(
  hikvisionPlatformLibrary: HikvisionPlatformLibrary,
): string {
  return JSON.stringify(
    HikvisionPlatformLibrary$outboundSchema.parse(hikvisionPlatformLibrary),
  );
}

export function hikvisionPlatformLibraryFromJSON(
  jsonString: string,
): SafeParseResult<HikvisionPlatformLibrary, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HikvisionPlatformLibrary$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HikvisionPlatformLibrary' from JSON`,
  );
}
