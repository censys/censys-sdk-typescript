/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  KubernetesEndpointSubsetEndpointAddress,
  KubernetesEndpointSubsetEndpointAddress$inboundSchema,
  KubernetesEndpointSubsetEndpointAddress$Outbound,
  KubernetesEndpointSubsetEndpointAddress$outboundSchema,
} from "./kubernetesendpointsubsetendpointaddress.js";
import {
  KubernetesEndpointSubsetPort,
  KubernetesEndpointSubsetPort$inboundSchema,
  KubernetesEndpointSubsetPort$Outbound,
  KubernetesEndpointSubsetPort$outboundSchema,
} from "./kubernetesendpointsubsetport.js";

export type KubernetesEndpointSubset = {
  addresses?: Array<KubernetesEndpointSubsetEndpointAddress> | null | undefined;
  ports?: Array<KubernetesEndpointSubsetPort> | null | undefined;
};

/** @internal */
export const KubernetesEndpointSubset$inboundSchema: z.ZodType<
  KubernetesEndpointSubset,
  z.ZodTypeDef,
  unknown
> = z.object({
  addresses: z.nullable(
    z.array(KubernetesEndpointSubsetEndpointAddress$inboundSchema),
  ).optional(),
  ports: z.nullable(z.array(KubernetesEndpointSubsetPort$inboundSchema))
    .optional(),
});

/** @internal */
export type KubernetesEndpointSubset$Outbound = {
  addresses?:
    | Array<KubernetesEndpointSubsetEndpointAddress$Outbound>
    | null
    | undefined;
  ports?: Array<KubernetesEndpointSubsetPort$Outbound> | null | undefined;
};

/** @internal */
export const KubernetesEndpointSubset$outboundSchema: z.ZodType<
  KubernetesEndpointSubset$Outbound,
  z.ZodTypeDef,
  KubernetesEndpointSubset
> = z.object({
  addresses: z.nullable(
    z.array(KubernetesEndpointSubsetEndpointAddress$outboundSchema),
  ).optional(),
  ports: z.nullable(z.array(KubernetesEndpointSubsetPort$outboundSchema))
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace KubernetesEndpointSubset$ {
  /** @deprecated use `KubernetesEndpointSubset$inboundSchema` instead. */
  export const inboundSchema = KubernetesEndpointSubset$inboundSchema;
  /** @deprecated use `KubernetesEndpointSubset$outboundSchema` instead. */
  export const outboundSchema = KubernetesEndpointSubset$outboundSchema;
  /** @deprecated use `KubernetesEndpointSubset$Outbound` instead. */
  export type Outbound = KubernetesEndpointSubset$Outbound;
}

export function kubernetesEndpointSubsetToJSON(
  kubernetesEndpointSubset: KubernetesEndpointSubset,
): string {
  return JSON.stringify(
    KubernetesEndpointSubset$outboundSchema.parse(kubernetesEndpointSubset),
  );
}

export function kubernetesEndpointSubsetFromJSON(
  jsonString: string,
): SafeParseResult<KubernetesEndpointSubset, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => KubernetesEndpointSubset$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'KubernetesEndpointSubset' from JSON`,
  );
}
