/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type HttpFavicon = {
  hashMd5?: string | undefined;
  /**
   * A 64-bit 'perceptual' hash of the favicon
   */
  hashPhash?: string | undefined;
  hashSha256?: string | undefined;
  /**
   * A hash expressed as a signed decimal integer, provided for compatability with Shodan search.
   */
  hashShodan?: number | undefined;
  /**
   * The URI used to retrieve the favicon, which most commonly use the http(s) or data schemes. URIs using the data scheme are truncated: the first 48 and last 24 characters are preserved.
   */
  name?: string | undefined;
  /**
   * The size of the favicon retrieved, in bytes.
   */
  size?: number | undefined;
};

/** @internal */
export const HttpFavicon$inboundSchema: z.ZodType<
  HttpFavicon,
  z.ZodTypeDef,
  unknown
> = z.object({
  hash_md5: z.string().optional(),
  hash_phash: z.string().optional(),
  hash_sha256: z.string().optional(),
  hash_shodan: z.number().int().optional(),
  name: z.string().optional(),
  size: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    "hash_md5": "hashMd5",
    "hash_phash": "hashPhash",
    "hash_sha256": "hashSha256",
    "hash_shodan": "hashShodan",
  });
});

/** @internal */
export type HttpFavicon$Outbound = {
  hash_md5?: string | undefined;
  hash_phash?: string | undefined;
  hash_sha256?: string | undefined;
  hash_shodan?: number | undefined;
  name?: string | undefined;
  size?: number | undefined;
};

/** @internal */
export const HttpFavicon$outboundSchema: z.ZodType<
  HttpFavicon$Outbound,
  z.ZodTypeDef,
  HttpFavicon
> = z.object({
  hashMd5: z.string().optional(),
  hashPhash: z.string().optional(),
  hashSha256: z.string().optional(),
  hashShodan: z.number().int().optional(),
  name: z.string().optional(),
  size: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    hashMd5: "hash_md5",
    hashPhash: "hash_phash",
    hashSha256: "hash_sha256",
    hashShodan: "hash_shodan",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HttpFavicon$ {
  /** @deprecated use `HttpFavicon$inboundSchema` instead. */
  export const inboundSchema = HttpFavicon$inboundSchema;
  /** @deprecated use `HttpFavicon$outboundSchema` instead. */
  export const outboundSchema = HttpFavicon$outboundSchema;
  /** @deprecated use `HttpFavicon$Outbound` instead. */
  export type Outbound = HttpFavicon$Outbound;
}

export function httpFaviconToJSON(httpFavicon: HttpFavicon): string {
  return JSON.stringify(HttpFavicon$outboundSchema.parse(httpFavicon));
}

export function httpFaviconFromJSON(
  jsonString: string,
): SafeParseResult<HttpFavicon, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HttpFavicon$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HttpFavicon' from JSON`,
  );
}
