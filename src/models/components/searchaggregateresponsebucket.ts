/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SearchAggregateResponseBucket = {
  count: number;
  key: string;
};

/** @internal */
export const SearchAggregateResponseBucket$inboundSchema: z.ZodType<
  SearchAggregateResponseBucket,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number().int(),
  key: z.string(),
});

/** @internal */
export type SearchAggregateResponseBucket$Outbound = {
  count: number;
  key: string;
};

/** @internal */
export const SearchAggregateResponseBucket$outboundSchema: z.ZodType<
  SearchAggregateResponseBucket$Outbound,
  z.ZodTypeDef,
  SearchAggregateResponseBucket
> = z.object({
  count: z.number().int(),
  key: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SearchAggregateResponseBucket$ {
  /** @deprecated use `SearchAggregateResponseBucket$inboundSchema` instead. */
  export const inboundSchema = SearchAggregateResponseBucket$inboundSchema;
  /** @deprecated use `SearchAggregateResponseBucket$outboundSchema` instead. */
  export const outboundSchema = SearchAggregateResponseBucket$outboundSchema;
  /** @deprecated use `SearchAggregateResponseBucket$Outbound` instead. */
  export type Outbound = SearchAggregateResponseBucket$Outbound;
}

export function searchAggregateResponseBucketToJSON(
  searchAggregateResponseBucket: SearchAggregateResponseBucket,
): string {
  return JSON.stringify(
    SearchAggregateResponseBucket$outboundSchema.parse(
      searchAggregateResponseBucket,
    ),
  );
}

export function searchAggregateResponseBucketFromJSON(
  jsonString: string,
): SafeParseResult<SearchAggregateResponseBucket, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SearchAggregateResponseBucket$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SearchAggregateResponseBucket' from JSON`,
  );
}
