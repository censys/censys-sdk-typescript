/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ListCollectionsResponseV1,
  ListCollectionsResponseV1$inboundSchema,
  ListCollectionsResponseV1$Outbound,
  ListCollectionsResponseV1$outboundSchema,
} from "./listcollectionsresponsev1.js";

export type ResponseEnvelopeListCollectionsResponseV1 = {
  result?: ListCollectionsResponseV1 | undefined;
};

/** @internal */
export const ResponseEnvelopeListCollectionsResponseV1$inboundSchema: z.ZodType<
  ResponseEnvelopeListCollectionsResponseV1,
  z.ZodTypeDef,
  unknown
> = z.object({
  result: ListCollectionsResponseV1$inboundSchema.optional(),
});

/** @internal */
export type ResponseEnvelopeListCollectionsResponseV1$Outbound = {
  result?: ListCollectionsResponseV1$Outbound | undefined;
};

/** @internal */
export const ResponseEnvelopeListCollectionsResponseV1$outboundSchema:
  z.ZodType<
    ResponseEnvelopeListCollectionsResponseV1$Outbound,
    z.ZodTypeDef,
    ResponseEnvelopeListCollectionsResponseV1
  > = z.object({
    result: ListCollectionsResponseV1$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseEnvelopeListCollectionsResponseV1$ {
  /** @deprecated use `ResponseEnvelopeListCollectionsResponseV1$inboundSchema` instead. */
  export const inboundSchema =
    ResponseEnvelopeListCollectionsResponseV1$inboundSchema;
  /** @deprecated use `ResponseEnvelopeListCollectionsResponseV1$outboundSchema` instead. */
  export const outboundSchema =
    ResponseEnvelopeListCollectionsResponseV1$outboundSchema;
  /** @deprecated use `ResponseEnvelopeListCollectionsResponseV1$Outbound` instead. */
  export type Outbound = ResponseEnvelopeListCollectionsResponseV1$Outbound;
}

export function responseEnvelopeListCollectionsResponseV1ToJSON(
  responseEnvelopeListCollectionsResponseV1:
    ResponseEnvelopeListCollectionsResponseV1,
): string {
  return JSON.stringify(
    ResponseEnvelopeListCollectionsResponseV1$outboundSchema.parse(
      responseEnvelopeListCollectionsResponseV1,
    ),
  );
}

export function responseEnvelopeListCollectionsResponseV1FromJSON(
  jsonString: string,
): SafeParseResult<
  ResponseEnvelopeListCollectionsResponseV1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ResponseEnvelopeListCollectionsResponseV1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ResponseEnvelopeListCollectionsResponseV1' from JSON`,
  );
}
