/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  WebpropertyAsset,
  WebpropertyAsset$inboundSchema,
  WebpropertyAsset$Outbound,
  WebpropertyAsset$outboundSchema,
} from "./webpropertyasset.js";

export type ResponseEnvelopeListWebpropertyAsset = {
  result?: Array<WebpropertyAsset> | null | undefined;
};

/** @internal */
export const ResponseEnvelopeListWebpropertyAsset$inboundSchema: z.ZodType<
  ResponseEnvelopeListWebpropertyAsset,
  z.ZodTypeDef,
  unknown
> = z.object({
  result: z.nullable(z.array(WebpropertyAsset$inboundSchema)).optional(),
});

/** @internal */
export type ResponseEnvelopeListWebpropertyAsset$Outbound = {
  result?: Array<WebpropertyAsset$Outbound> | null | undefined;
};

/** @internal */
export const ResponseEnvelopeListWebpropertyAsset$outboundSchema: z.ZodType<
  ResponseEnvelopeListWebpropertyAsset$Outbound,
  z.ZodTypeDef,
  ResponseEnvelopeListWebpropertyAsset
> = z.object({
  result: z.nullable(z.array(WebpropertyAsset$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseEnvelopeListWebpropertyAsset$ {
  /** @deprecated use `ResponseEnvelopeListWebpropertyAsset$inboundSchema` instead. */
  export const inboundSchema =
    ResponseEnvelopeListWebpropertyAsset$inboundSchema;
  /** @deprecated use `ResponseEnvelopeListWebpropertyAsset$outboundSchema` instead. */
  export const outboundSchema =
    ResponseEnvelopeListWebpropertyAsset$outboundSchema;
  /** @deprecated use `ResponseEnvelopeListWebpropertyAsset$Outbound` instead. */
  export type Outbound = ResponseEnvelopeListWebpropertyAsset$Outbound;
}

export function responseEnvelopeListWebpropertyAssetToJSON(
  responseEnvelopeListWebpropertyAsset: ResponseEnvelopeListWebpropertyAsset,
): string {
  return JSON.stringify(
    ResponseEnvelopeListWebpropertyAsset$outboundSchema.parse(
      responseEnvelopeListWebpropertyAsset,
    ),
  );
}

export function responseEnvelopeListWebpropertyAssetFromJSON(
  jsonString: string,
): SafeParseResult<ResponseEnvelopeListWebpropertyAsset, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ResponseEnvelopeListWebpropertyAsset$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseEnvelopeListWebpropertyAsset' from JSON`,
  );
}
