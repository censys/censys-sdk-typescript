/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type VentriloHeader = {
  cmd?: number | undefined;
  dataKey?: number | undefined;
  headerKey?: number | undefined;
  id?: number | undefined;
  totalLength?: number | undefined;
};

/** @internal */
export const VentriloHeader$inboundSchema: z.ZodType<
  VentriloHeader,
  z.ZodTypeDef,
  unknown
> = z.object({
  cmd: z.number().int().optional(),
  data_key: z.number().int().optional(),
  header_key: z.number().int().optional(),
  id: z.number().int().optional(),
  total_length: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    "data_key": "dataKey",
    "header_key": "headerKey",
    "total_length": "totalLength",
  });
});

/** @internal */
export type VentriloHeader$Outbound = {
  cmd?: number | undefined;
  data_key?: number | undefined;
  header_key?: number | undefined;
  id?: number | undefined;
  total_length?: number | undefined;
};

/** @internal */
export const VentriloHeader$outboundSchema: z.ZodType<
  VentriloHeader$Outbound,
  z.ZodTypeDef,
  VentriloHeader
> = z.object({
  cmd: z.number().int().optional(),
  dataKey: z.number().int().optional(),
  headerKey: z.number().int().optional(),
  id: z.number().int().optional(),
  totalLength: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    dataKey: "data_key",
    headerKey: "header_key",
    totalLength: "total_length",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VentriloHeader$ {
  /** @deprecated use `VentriloHeader$inboundSchema` instead. */
  export const inboundSchema = VentriloHeader$inboundSchema;
  /** @deprecated use `VentriloHeader$outboundSchema` instead. */
  export const outboundSchema = VentriloHeader$outboundSchema;
  /** @deprecated use `VentriloHeader$Outbound` instead. */
  export type Outbound = VentriloHeader$Outbound;
}

export function ventriloHeaderToJSON(ventriloHeader: VentriloHeader): string {
  return JSON.stringify(VentriloHeader$outboundSchema.parse(ventriloHeader));
}

export function ventriloHeaderFromJSON(
  jsonString: string,
): SafeParseResult<VentriloHeader, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VentriloHeader$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VentriloHeader' from JSON`,
  );
}
