/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type LdapAttribute = {
  /**
   * Name of the LDAP attribute in the root DN
   */
  name?: string | undefined;
  /**
   * Values for the respective LDAP attribute
   */
  values?: Array<string> | null | undefined;
};

/** @internal */
export const LdapAttribute$inboundSchema: z.ZodType<
  LdapAttribute,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  values: z.nullable(z.array(z.string())).optional(),
});

/** @internal */
export type LdapAttribute$Outbound = {
  name?: string | undefined;
  values?: Array<string> | null | undefined;
};

/** @internal */
export const LdapAttribute$outboundSchema: z.ZodType<
  LdapAttribute$Outbound,
  z.ZodTypeDef,
  LdapAttribute
> = z.object({
  name: z.string().optional(),
  values: z.nullable(z.array(z.string())).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LdapAttribute$ {
  /** @deprecated use `LdapAttribute$inboundSchema` instead. */
  export const inboundSchema = LdapAttribute$inboundSchema;
  /** @deprecated use `LdapAttribute$outboundSchema` instead. */
  export const outboundSchema = LdapAttribute$outboundSchema;
  /** @deprecated use `LdapAttribute$Outbound` instead. */
  export type Outbound = LdapAttribute$Outbound;
}

export function ldapAttributeToJSON(ldapAttribute: LdapAttribute): string {
  return JSON.stringify(LdapAttribute$outboundSchema.parse(ldapAttribute));
}

export function ldapAttributeFromJSON(
  jsonString: string,
): SafeParseResult<LdapAttribute, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LdapAttribute$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LdapAttribute' from JSON`,
  );
}
