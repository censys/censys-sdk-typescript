/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type Skinny = {
  response?: string | undefined;
};

/** @internal */
export const Skinny$inboundSchema: z.ZodType<Skinny, z.ZodTypeDef, unknown> = z
  .object({
    response: z.string().optional(),
  });

/** @internal */
export type Skinny$Outbound = {
  response?: string | undefined;
};

/** @internal */
export const Skinny$outboundSchema: z.ZodType<
  Skinny$Outbound,
  z.ZodTypeDef,
  Skinny
> = z.object({
  response: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Skinny$ {
  /** @deprecated use `Skinny$inboundSchema` instead. */
  export const inboundSchema = Skinny$inboundSchema;
  /** @deprecated use `Skinny$outboundSchema` instead. */
  export const outboundSchema = Skinny$outboundSchema;
  /** @deprecated use `Skinny$Outbound` instead. */
  export type Outbound = Skinny$Outbound;
}

export function skinnyToJSON(skinny: Skinny): string {
  return JSON.stringify(Skinny$outboundSchema.parse(skinny));
}

export function skinnyFromJSON(
  jsonString: string,
): SafeParseResult<Skinny, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Skinny$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Skinny' from JSON`,
  );
}
