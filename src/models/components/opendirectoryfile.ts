/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type OpenDirectoryFile = {
  extension?: string | undefined;
  lastModified?: string | undefined;
  name?: string | undefined;
  path?: string | undefined;
  size?: number | undefined;
  suspiciousScore?: number | undefined;
  type?: string | undefined;
};

/** @internal */
export const OpenDirectoryFile$inboundSchema: z.ZodType<
  OpenDirectoryFile,
  z.ZodTypeDef,
  unknown
> = z.object({
  extension: z.string().optional(),
  last_modified: z.string().optional(),
  name: z.string().optional(),
  path: z.string().optional(),
  size: z.number().int().optional(),
  suspicious_score: z.number().optional(),
  type: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "last_modified": "lastModified",
    "suspicious_score": "suspiciousScore",
  });
});

/** @internal */
export type OpenDirectoryFile$Outbound = {
  extension?: string | undefined;
  last_modified?: string | undefined;
  name?: string | undefined;
  path?: string | undefined;
  size?: number | undefined;
  suspicious_score?: number | undefined;
  type?: string | undefined;
};

/** @internal */
export const OpenDirectoryFile$outboundSchema: z.ZodType<
  OpenDirectoryFile$Outbound,
  z.ZodTypeDef,
  OpenDirectoryFile
> = z.object({
  extension: z.string().optional(),
  lastModified: z.string().optional(),
  name: z.string().optional(),
  path: z.string().optional(),
  size: z.number().int().optional(),
  suspiciousScore: z.number().optional(),
  type: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    lastModified: "last_modified",
    suspiciousScore: "suspicious_score",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenDirectoryFile$ {
  /** @deprecated use `OpenDirectoryFile$inboundSchema` instead. */
  export const inboundSchema = OpenDirectoryFile$inboundSchema;
  /** @deprecated use `OpenDirectoryFile$outboundSchema` instead. */
  export const outboundSchema = OpenDirectoryFile$outboundSchema;
  /** @deprecated use `OpenDirectoryFile$Outbound` instead. */
  export type Outbound = OpenDirectoryFile$Outbound;
}

export function openDirectoryFileToJSON(
  openDirectoryFile: OpenDirectoryFile,
): string {
  return JSON.stringify(
    OpenDirectoryFile$outboundSchema.parse(openDirectoryFile),
  );
}

export function openDirectoryFileFromJSON(
  jsonString: string,
): SafeParseResult<OpenDirectoryFile, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OpenDirectoryFile$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OpenDirectoryFile' from JSON`,
  );
}
