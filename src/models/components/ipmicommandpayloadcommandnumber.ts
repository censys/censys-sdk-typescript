/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type IpmiCommandPayloadCommandNumber = {
  /**
   * The human-readable name of the cmd + NetFn
   */
  name?: string | undefined;
  /**
   * The raw value of the cmd value
   */
  raw?: number | undefined;
};

/** @internal */
export const IpmiCommandPayloadCommandNumber$inboundSchema: z.ZodType<
  IpmiCommandPayloadCommandNumber,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  raw: z.number().int().optional(),
});

/** @internal */
export type IpmiCommandPayloadCommandNumber$Outbound = {
  name?: string | undefined;
  raw?: number | undefined;
};

/** @internal */
export const IpmiCommandPayloadCommandNumber$outboundSchema: z.ZodType<
  IpmiCommandPayloadCommandNumber$Outbound,
  z.ZodTypeDef,
  IpmiCommandPayloadCommandNumber
> = z.object({
  name: z.string().optional(),
  raw: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IpmiCommandPayloadCommandNumber$ {
  /** @deprecated use `IpmiCommandPayloadCommandNumber$inboundSchema` instead. */
  export const inboundSchema = IpmiCommandPayloadCommandNumber$inboundSchema;
  /** @deprecated use `IpmiCommandPayloadCommandNumber$outboundSchema` instead. */
  export const outboundSchema = IpmiCommandPayloadCommandNumber$outboundSchema;
  /** @deprecated use `IpmiCommandPayloadCommandNumber$Outbound` instead. */
  export type Outbound = IpmiCommandPayloadCommandNumber$Outbound;
}

export function ipmiCommandPayloadCommandNumberToJSON(
  ipmiCommandPayloadCommandNumber: IpmiCommandPayloadCommandNumber,
): string {
  return JSON.stringify(
    IpmiCommandPayloadCommandNumber$outboundSchema.parse(
      ipmiCommandPayloadCommandNumber,
    ),
  );
}

export function ipmiCommandPayloadCommandNumberFromJSON(
  jsonString: string,
): SafeParseResult<IpmiCommandPayloadCommandNumber, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IpmiCommandPayloadCommandNumber$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IpmiCommandPayloadCommandNumber' from JSON`,
  );
}
