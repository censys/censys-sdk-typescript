/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RedisRawOutput = {
  output?: string | undefined;
};

/** @internal */
export const RedisRawOutput$inboundSchema: z.ZodType<
  RedisRawOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  output: z.string().optional(),
});

/** @internal */
export type RedisRawOutput$Outbound = {
  output?: string | undefined;
};

/** @internal */
export const RedisRawOutput$outboundSchema: z.ZodType<
  RedisRawOutput$Outbound,
  z.ZodTypeDef,
  RedisRawOutput
> = z.object({
  output: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RedisRawOutput$ {
  /** @deprecated use `RedisRawOutput$inboundSchema` instead. */
  export const inboundSchema = RedisRawOutput$inboundSchema;
  /** @deprecated use `RedisRawOutput$outboundSchema` instead. */
  export const outboundSchema = RedisRawOutput$outboundSchema;
  /** @deprecated use `RedisRawOutput$Outbound` instead. */
  export type Outbound = RedisRawOutput$Outbound;
}

export function redisRawOutputToJSON(redisRawOutput: RedisRawOutput): string {
  return JSON.stringify(RedisRawOutput$outboundSchema.parse(redisRawOutput));
}

export function redisRawOutputFromJSON(
  jsonString: string,
): SafeParseResult<RedisRawOutput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RedisRawOutput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RedisRawOutput' from JSON`,
  );
}
