/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ExportList = {
  directory?: string | undefined;
  groups?: Array<string> | null | undefined;
};

/** @internal */
export const ExportList$inboundSchema: z.ZodType<
  ExportList,
  z.ZodTypeDef,
  unknown
> = z.object({
  directory: z.string().optional(),
  groups: z.nullable(z.array(z.string())).optional(),
});

/** @internal */
export type ExportList$Outbound = {
  directory?: string | undefined;
  groups?: Array<string> | null | undefined;
};

/** @internal */
export const ExportList$outboundSchema: z.ZodType<
  ExportList$Outbound,
  z.ZodTypeDef,
  ExportList
> = z.object({
  directory: z.string().optional(),
  groups: z.nullable(z.array(z.string())).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportList$ {
  /** @deprecated use `ExportList$inboundSchema` instead. */
  export const inboundSchema = ExportList$inboundSchema;
  /** @deprecated use `ExportList$outboundSchema` instead. */
  export const outboundSchema = ExportList$outboundSchema;
  /** @deprecated use `ExportList$Outbound` instead. */
  export type Outbound = ExportList$Outbound;
}

export function exportListToJSON(exportList: ExportList): string {
  return JSON.stringify(ExportList$outboundSchema.parse(exportList));
}

export function exportListFromJSON(
  jsonString: string,
): SafeParseResult<ExportList, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ExportList$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ExportList' from JSON`,
  );
}
