/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNodeAttr,
  ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNodeAttr$inboundSchema,
  ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNodeAttr$Outbound,
  ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNodeAttr$outboundSchema,
} from "./elasticsearchresultsnodeinfonodesnodedatanodesettingsnodeattr.js";

export type ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode = {
  attr?:
    | ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNodeAttr
    | undefined;
  name?: string | undefined;
};

/** @internal */
export const ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode$inboundSchema:
  z.ZodType<
    ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode,
    z.ZodTypeDef,
    unknown
  > = z.object({
    attr:
      ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNodeAttr$inboundSchema
        .optional(),
    name: z.string().optional(),
  });

/** @internal */
export type ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode$Outbound =
  {
    attr?:
      | ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNodeAttr$Outbound
      | undefined;
    name?: string | undefined;
  };

/** @internal */
export const ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode$outboundSchema:
  z.ZodType<
    ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode$Outbound,
    z.ZodTypeDef,
    ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode
  > = z.object({
    attr:
      ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNodeAttr$outboundSchema
        .optional(),
    name: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode$ {
  /** @deprecated use `ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode$inboundSchema` instead. */
  export const inboundSchema =
    ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode$inboundSchema;
  /** @deprecated use `ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode$outboundSchema` instead. */
  export const outboundSchema =
    ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode$outboundSchema;
  /** @deprecated use `ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode$Outbound` instead. */
  export type Outbound =
    ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode$Outbound;
}

export function elasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNodeToJSON(
  elasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode:
    ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode,
): string {
  return JSON.stringify(
    ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode$outboundSchema
      .parse(elasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode),
  );
}

export function elasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNodeFromJSON(
  jsonString: string,
): SafeParseResult<
  ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'ElasticSearchResultsNodeInfoNodesNodeDataNodeSettingsNode' from JSON`,
  );
}
