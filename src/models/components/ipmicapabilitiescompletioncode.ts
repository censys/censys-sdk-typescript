/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type IpmiCapabilitiesCompletionCode = {
  /**
   * The human-readable name of the code
   */
  name?: string | undefined;
  /**
   * The raw completion code
   */
  raw?: number | undefined;
};

/** @internal */
export const IpmiCapabilitiesCompletionCode$inboundSchema: z.ZodType<
  IpmiCapabilitiesCompletionCode,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  raw: z.number().int().optional(),
});

/** @internal */
export type IpmiCapabilitiesCompletionCode$Outbound = {
  name?: string | undefined;
  raw?: number | undefined;
};

/** @internal */
export const IpmiCapabilitiesCompletionCode$outboundSchema: z.ZodType<
  IpmiCapabilitiesCompletionCode$Outbound,
  z.ZodTypeDef,
  IpmiCapabilitiesCompletionCode
> = z.object({
  name: z.string().optional(),
  raw: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IpmiCapabilitiesCompletionCode$ {
  /** @deprecated use `IpmiCapabilitiesCompletionCode$inboundSchema` instead. */
  export const inboundSchema = IpmiCapabilitiesCompletionCode$inboundSchema;
  /** @deprecated use `IpmiCapabilitiesCompletionCode$outboundSchema` instead. */
  export const outboundSchema = IpmiCapabilitiesCompletionCode$outboundSchema;
  /** @deprecated use `IpmiCapabilitiesCompletionCode$Outbound` instead. */
  export type Outbound = IpmiCapabilitiesCompletionCode$Outbound;
}

export function ipmiCapabilitiesCompletionCodeToJSON(
  ipmiCapabilitiesCompletionCode: IpmiCapabilitiesCompletionCode,
): string {
  return JSON.stringify(
    IpmiCapabilitiesCompletionCode$outboundSchema.parse(
      ipmiCapabilitiesCompletionCode,
    ),
  );
}

export function ipmiCapabilitiesCompletionCodeFromJSON(
  jsonString: string,
): SafeParseResult<IpmiCapabilitiesCompletionCode, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IpmiCapabilitiesCompletionCode$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IpmiCapabilitiesCompletionCode' from JSON`,
  );
}
