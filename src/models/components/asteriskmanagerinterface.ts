/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AsteriskManagerInterface = {
  version?: string | undefined;
};

/** @internal */
export const AsteriskManagerInterface$inboundSchema: z.ZodType<
  AsteriskManagerInterface,
  z.ZodTypeDef,
  unknown
> = z.object({
  version: z.string().optional(),
});

/** @internal */
export type AsteriskManagerInterface$Outbound = {
  version?: string | undefined;
};

/** @internal */
export const AsteriskManagerInterface$outboundSchema: z.ZodType<
  AsteriskManagerInterface$Outbound,
  z.ZodTypeDef,
  AsteriskManagerInterface
> = z.object({
  version: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AsteriskManagerInterface$ {
  /** @deprecated use `AsteriskManagerInterface$inboundSchema` instead. */
  export const inboundSchema = AsteriskManagerInterface$inboundSchema;
  /** @deprecated use `AsteriskManagerInterface$outboundSchema` instead. */
  export const outboundSchema = AsteriskManagerInterface$outboundSchema;
  /** @deprecated use `AsteriskManagerInterface$Outbound` instead. */
  export type Outbound = AsteriskManagerInterface$Outbound;
}

export function asteriskManagerInterfaceToJSON(
  asteriskManagerInterface: AsteriskManagerInterface,
): string {
  return JSON.stringify(
    AsteriskManagerInterface$outboundSchema.parse(asteriskManagerInterface),
  );
}

export function asteriskManagerInterfaceFromJSON(
  jsonString: string,
): SafeParseResult<AsteriskManagerInterface, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AsteriskManagerInterface$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AsteriskManagerInterface' from JSON`,
  );
}
